{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "coil",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#lang_constants"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#regex"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#record_constructor"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#numbers"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.coil",
          "begin": "(--).*",
          "end": "\n"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.coil",
          "match": "(await|async|or|and|keyof|of|impl|define|let|protocol|do|end|if|fn|while|loop|try|catch|finally|else|yield|return|continue|break|export|default|import|from|for)\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "match": "\\b([A-Z][a-zA-Z0-9_\\-\\!\\?]*)\\b",
          "name": "entity.name.type"
        },
        {
          "match": "\\b([a-z][a-zA-Z0-9_\\-\\!\\?]*)\\b",
          "name": "variable.name"
        }
      ]
    },
    "lang_constants": {
      "patterns": [
        {
          "match": "\\b(true|false|nil|this)\\b",
          "name": "constant.language"
        },
        {
          "match": "(:[a-zA-Z_?!$0-9/]+)",
          "name": "constant.language"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "match": "\\.([a-zA-Z][a-zA-Z0-9_\\!\\?]+)\\(",
          "name": "entity.name.function"
        },
        {
          "match": "([a-zA-Z][a-zA-Z0-9_\\!\\?]+)\\(",
          "name": "entity.name.function"
        }
      ]
    },
    "regex": {
      "name": "constant.regexp",
      "match": "(\\/.*\\/)",
      "patterns": [
        {
          "name": "constant.character.escape.coil",
          "match": "\\\\."
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.coil",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.coil",
          "match": "\\\\."
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "[\\-\\+]?(\\d+)(n)",
          "captures": {
            "1": {
              "name": "constant.numeric"
            },
            "2": {
              "name": "emphasis"
            }
          }
        },
        {
          "name": "constant.numeric",
          "match": "[\\-\\+]?(\\d*\\.)?\\d+"
        }
      ]
    }
  },
  "scopeName": "source.coil"
}
