fn eval_expr(val, name) {
  if this is Array {
    for [id, idx] of this::zip(0..) {
      if name == id {
        return val::at(idx)
      }
    }
  }
}

define Vector for Array = fn(tokens) {
  let [name, _for, expr, _of, iterable] = tokens
  let output = []
  for elem of iterable {
    output.push(expr::eval_expr(elem, name))
  }
  return output
}

~Array[:elem :for [:elem :idx] :of [1 2 3]::zip(0..)]
  ::log()
