import "./dist/prelude.js"

fn Model {}

impl :test for Model = "blah"

fn extends(f, ParentCtor) {
  f.prototype = {...f.prototype, ...ParentCtor.prototype}
  return f
}

@extends(Model)
fn User(@name @age) {}

// later in react I want to do the following

let me = User["marcelle" 25]

me::into(:tr) // table row representation of User
me::into(:div) // div (generic) representation of User
me::into(:div.card) // card representation of user
me::into(:tr.edit) // editable table row representation
me::into(:form) // editable form representation


// let result = {[Symbol.toStringTag]: "Dog"}
// Dog.bind(result, "kitty")(12)

console.log(ObjectLiteral{a: 10})
