import { assertEquals: assert_equals, assertThrows: assert_throws } from "https://deno.land/std@0.220.0/assert/mod.ts"

let {test} = Deno

test("1 + 1 == 2" || assert_equals(1 + 1, 2))
test("1 - 1 == 0" || assert_equals(1 - 1, 0))
test("10 / 2 == 5" || assert_equals(10 / 2, 5))
test("2 * 2 == 4" || assert_equals(2 * 2, 4))
test("4 ** 2 == 16" || assert_equals(4 ** 2, 16))
test("10 % 2 == 0" || assert_equals(10 % 2, 0))
test("5 > 3 == true" || assert_equals(5 > 3, true))
test("3 < 3 == false" || assert_equals(3 < 3, false))
test("3 <= 3 == true" || assert_equals(3 <= 3, true))
test("3 >= 3 == true" || assert_equals(3 >= 3, true))
-- type safety tests
test("1 + \"2\" throws" || assert_throws(|| 1 + "2"))
test("1 - \"2\" throws" || assert_throws(|| 1 - "2"))
test("1 / \"2\" throws" || assert_throws(|| 1 / "2"))
test("1 * \"2\" throws" || assert_throws(|| 1 * "2"))
test("1 ** \"2\" throws" || assert_throws(|| 1 ** "2"))
test("1 % \"2\" throws" || assert_throws(|| 1 % "2"))
test("1 > \"2\" throws" || assert_throws(|| 1 > "2"))
test("1 < \"2\" throws" || assert_throws(|| 1 < "2"))
test("1 >= \"2\" throws" || assert_throws(|| 1 >= "2"))
test("1 <= \"2\" throws" || assert_throws(|| 1 <= "2"))
