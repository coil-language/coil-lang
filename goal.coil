fn CondMap(entries) { this.entries = entries }

define Record for CondMap = fn(entries) = new CondMap(entries)

impl Call for CondMap = fn(key) {
  for [cond val] of this.entries {
    if cond::call(key) {
      return val
    }
  }
}

[
  {score: 50, name: "jack"}
  {score: 90, name: "bob"}
  {score: 80, name: "jill"}
]
  ::map(_::update(:score
    ~CondMap{0...50  => :f
             50...60 => :d
             60...70 => :c
             70...80 => :b
             80..100 => :a}))
  ::log()
