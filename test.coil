let state = null

define Effect for :inc = fn() {
  state = state + 1
  return state
}

define Effect for :get = fn() = state

define Effect for :init = fn(start) {
  state = start || 0
  return state
}

fn* main() {
  yield :init
  yield :inc
  yield :inc
  return yield :get
}

run(main)::log()
